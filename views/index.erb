<!DOCTYPE html> 
<html> 
	<head> 
		<title>Life Time Fitness Employee Access</title> 
		<%= partial(:_head) %>
	</head>
</head> 
<body> 

	<div data-role="page" data-add-back-btn="true" id="home">
		<div data-role="header">
			<h1>Employee Access</h1>
		</div>
		<div data-role="content">	
			Loading...	
		</div>
		<div data-role="footer">
			<h4 class="username"></h4>
		</div>
	</div>

	<div data-role="page" id="view-my-schedule" data-add-back-btn="true">
		<div data-role="header">
			<h1>My Schedule</h1>
			<a class="new-appointment ui-btn-right" data-icon="plus">New Appointment</a>
		</div>
		<div data-role="content">	
		</div>
		<div data-role="footer">
			<h4 class="username"></h4>
		</div>
	</div>

	<div data-role="page" id="meeting-details" data-add-back-btn="true">
		<div data-role="header">
			<h1></h1>
		</div>
		<div data-role="content">	
			Meeting details.
		</div>
	</div>

	<div id="my-book-page" data-role="page" data-add-back-btn="true">
		<div data-role="header">
			<h1>My Book</h1>
		</div>
		<div data-role="content">
			Loading...
		</div>
	</div>

	<div id="client-details" data-role="page" data-add-back-btn="true">
		<div data-role="header">
			<h1></h1>
		</div>
		<div data-role="content">	
		</div>
	</div>

	<div id="new-appointment" data-role="page" data-title="New Appointment">
		<div data-role="header">
			<h1>New Appointment</h1>
			<a href="#home" data-iconpos="notext" data-icon="home" title="Home" data-theme="a"></a>
		</div>
		<div data-role="content">	
		</div>
	</div>

</body>
<%= partial(:_templates) %>
<script type="text/javascript">

$(document).bind("onAuthenticated", function(e, employee){
	$('h4.username').text('Logged-In As: ' + employee.name.full );
	$('#home .ui-header').append('<a class="ui-btn-right" href="<%= to('/logout') %>">Logout</a>')

	//Create the home page...
	var container = $('#home .ui-content').empty();
	var list = $('<ul data-role="listview"></ul>');
	list.append('<li><a href="" onclick="resetAppointmentWizard(); return false;">New Appointment</a></li>');
	list.append('<li><a href="#view-my-schedule">Upcoming Schedule</a></li>');
	list.append('<li><a href="#my-book-page">My Book</a></li>');
	container.append(list);
	$('#home').trigger( "create" );
});

$( document ).delegate("#view-my-schedule", "pagecreate", refreshMySchedule);
$( document ).delegate("#my-book-page", "pagecreate", refreshMyBook);
$( document ).delegate("#new-appointment", "pagecreate", refreshAppointmentWizard);

function resetAppointmentWizard() {
	$('#new-appointment .ui-content').data('appointment-process',{});
	$.mobile.changePage("#new-appointment");
	refreshAppointmentWizard();
}

function appointmentProcess() {
	return $('#new-appointment .ui-content').data('appointment-process');
}

function refreshAppointmentWizard() {
	var container = $('#new-appointment .ui-content');
	var process = container.data('appointment-process');
	if(process == undefined) { 
		process = {} 
	};
	
	container.empty();
	if(process['member'] == undefined){
		if(process['memberSource'] == undefined){

			var btn = $('<a href="#" data-role="button" data-theme="b">Select Member From Book</a>');
			btn.click(function(e){
				e.preventDefault();
				process['memberSource'] = 'book';
				refreshAppointmentWizard();
			});
			container.append(btn);

			btn = $('<a href="#" data-role="button">Find Member in MMS</a>');
			btn.click(function(e){
				e.preventDefault();
				process['memberSource'] = 'mms';
				refreshAppointmentWizard();
			});
			container.append(btn);
		}
		else {
			if(process.memberSource == 'mms') {

				container.append('<h3>Find Member</h3>');

				var fieldContainer = $('<div data-role="fieldcontain"></div>');
				container.append(fieldContainer);

				fieldContainer.append('<label for="name">Name</label>');
				fieldContainer.append('<input type="text" name="name" value="LeVin, E" placeholder="Last, First"></input>');

				var btn = $('<a data-role="button">Search</a>');
				btn.click(function(e){
					e.preventDefault();

					if(btn.hasClass('disabled')) {
						return;
					}

					btn.addClass('disabled').find('.ui-btn-text').text('... Searching ...');

					var name = container.find('input[name=name]').val();
					name = name.split(',');
					if(name.length != 2) {
						alert('Please specify the name as: LAST, FIRST');
						return;
					}

					container.find('ul.results').remove();

					searchMembers({
						data : {
							first_name : name[1],
							last_name : name[0]
						},
						success : function(data) {
							
							btn.removeClass('disabled').find('.ui-btn-text').text('Search');

							var list = $('<ul class="results" data-role="listview" data-inset="true"></ul>');
							for(var i = 0 ; i < data.member.length ; i++) {
								var member = data.member[i];
								member['name'] = BOSSAPI.utils.formatString('{first} {last}' , member.name);

								var item = $(clientListItemTemplate(member));
								item.data('client', member);
								list.append(item);
							}
							container.append(list);
							container.trigger('create');

							attachWizardClientLinks();
						}
					});
				});
				fieldContainer.append(btn);

				container.append('<div data-role="fieldcontain"><div class="results"></div></div>');
			}
			else {
				container.append('<div class="loading">Looking up your book...</div>').trigger('create');
				retrieveBook({
					success : function(data){
						createBook(container, data);
						attachWizardClientLinks();
					}
				});
			}
		}
	}
	else {
		if(process.member['membership_id'] == undefined) {
			BOSSAPI.auth.info({
				data : {
					member_id : process.member.member_id,
				},
				success : function(member) {
					process.member = member;
					refreshAppointmentWizard();
				},
				error : function() {
					alert('Failed to lookup member information.');
				}
			});	
		}
		else if (process['date_range'] == undefined) {
			
			container.append(renderDateField('date1','Date'));

			var timeslotContainer = $('<div class="timeslot-selection-container"></div>');
			container.append(timeslotContainer);

			container.find('.mobiscroll').val(Date.today().toString('MM/dd/yyyy')).scroller({
				onSelect : function(e) {
					var d = container.find('.mobiscroll').scroller('getDate');
					refreshTimeslotSelection(d, timeslotContainer);
				}
			});

			refreshTimeslotSelection(Date.today(), timeslotContainer);
		}
		else {
			//Confirm the appointment here....

			var msg = BOSSAPI.utils.formatString('Are you sure you want to book an appointment with {name} at {start_date} - {end_date}?',
						{ 
							name: process.member.name.first + ' ' + process.member.name.last,
							start_date : process.date_range[0].toString('ddd, MMMM d h:mm'), 
							end_date : process.date_range[1].toString('h:mm tt') 
						});
			container.append('<p>' + msg + '</p>');

			var link = $('<a data-role="button" data-theme="b">Confirm</a>');
			link.click(function(e){
				e.preventDefault();
				alert('TODO');
			});
			container.append(link);

			link = $('<a data-role="button">No</a>');
			link.click(function(e){
				e.preventDefault();
				$.mobile.changePage("#home");
			});
			container.append(link);
		}
	}

	container.data('appointment-process',process);
	container.trigger('create');
}

function refreshTimeslotSelection(date, container) {
	container.empty();

	container.append('<div class="loading">Searching your schedule</div>');

	searchSchedule({
		data : {
			date_range : date.toString('MM/dd/yyyy') + '-' + date.toString('MM/dd/yyyy'),
			debug : true
		},
		success : function(data) {
			renderTimeslotSelectionSchedule(data, container);
		}
	});
}

function renderTimeslotSelectionSchedule(results, container) {
	container.empty().data('results', results);

	var list = $('<ul class="timeslots padded" data-role="listview"></ul>');

	var range = undefined;
	var duration = 30 * 60 * 1000;
	if(results['availability'] != undefined && results['availability'].length > 0) {
		range = [results.availability[0].start_date, results.availability[0].end_date];
	}

	if(range != undefined) {
		for(var date = range[0] ; date < range[1] ; date = new Date(date.getTime() + duration)) {

			//Lets check whether this timeslot is taken or not....
			var end = new Date(date.getTime() + (duration - 1));

			var meeting = undefined;
			if(results['meetings'] != undefined) {
				for(var i = 0 ; i < results.meetings.length ; i++) {
					var mtg = results.meetings[i];
					if(mtg.start_date <= date && mtg.end_date > date) {
						meeting = mtg;
					}
				}
			}

			var item = undefined;
			if(meeting == undefined) {
				item = $(BOSSAPI.utils.formatString('<li class="timeslot"><a>{time}</a></li>' , { time : date.toString('h:mm tt') }));
			}
			else {
				item = $(BOSSAPI.utils.formatString('<li class="timeslot unavailable" data-theme="b">{description}</li>', meeting));
			}
			item.data('date', date);

			item.find('a').click(function(e){
				var date = $(this).parents('li.timeslot').data('date');
				var results = container.data('results');

				var next = findNextMeeting(date, results['meetings']);
				var max = next != undefined ? next.start_date : results.availability[0].end_date;

				renderDurationSelection(date, max, duration, container, function(range) {
					appointmentProcess().date_range = range;
					refreshAppointmentWizard();
				});
			});

			list.append(item);
		}
	}

	container.append(list).trigger('create');
}

function renderDurationSelection(start, max, duration, container, onSelect) {
	container.find('ul.timeslots').css('display','none');

	var durationContainer = $('<div class="duration-selection-container"></div>');

	var cleanUp = function() {
		durationContainer.remove();
		container.find('ul.timeslots').css('display','block');
		container.trigger('create');
	}

	var list = $('<ul class="durations padded" data-role="listview"></ul>');
	for( var date = start ; date < max ; date = new Date(date.getTime() + duration) ) {
		var end = new Date(date.getTime() + duration);
		var minutes = (end - start) / 60000;		

		var item = $('<a>(' + minutes + ' mins) ' + start.toString('h:mm tt') + '-' + end.toString('h:mm tt') + '</a>');
		item.data('range', [start, end]);
		list.append(item);

		item.click(function(e) {
			e.preventDefault();
			var range = $(this).data('range');
			cleanUp();
			onSelect(range);
		});
	}
	list.find('a').wrap('<li class="duration"></li>');
	durationContainer.append(list);

	var cancel = $('<a data-role="button">Cancel</a>');
	cancel.click(function(e){
		e.preventDefault();
		cleanUp();
	});
	durationContainer.append(cancel);

	container.append(durationContainer).trigger('create');
}



function attachWizardClientLinks() {
	$('#new-appointment .ui-content li.client a').click(function(){
		var client = $(this).parents('li.client').data('client');
		var container = $('#new-appointment .ui-content');

		var process = container.data('appointment-process');
		process.member = client;

		refreshAppointmentWizard();
	});
}

function refreshMySchedule() {
	var container = $('#view-my-schedule .ui-content');
	container.empty();
	container.text('Loading...');

	var params = {
		ssoid : BOSSAPI._ssoid,
		employee_number : employee().id,
		publish : 'true,false', //Both published and non-published schedules.
		includes : 'rosters'
	};

	BOSSAPI.scheduling.meetings.search(params, function(meetings){
		createMySchedulePage(meetings);
	});
}

function refreshMyBook() {
	retrieveBook({
		success : function(data){
			var container = $('#my-book-page .ui-content');
			createBook(container, data);

			$('#my-book-page li.client a').click(function(){
				showClient($(this).parents('li.client').data('client'));
			});
		}
	});
}

function createMySchedulePage(meetings) {
	var container = $('#view-my-schedule .ui-content');

	container.empty();
	container.append(mySchedulePageTemplate({}));

	var last_date = undefined;

	var list = container.find('ul');
	for(var i = 0 ; i < meetings.length ; i++) {
		var meeting = meetings[i];

		var meeting_date = BOSSAPI.utils.getDatestampFromDateTime(meeting.start_date);
		if(last_date != meeting_date) {
			list.append(listDividerItemTemplate({ text : meeting.start_date.toString('ddd, MMMM d, yyyy') }));
		}
		last_date = meeting_date;	

		var item = $(meetingListTemplate(meeting));
		item.find('a').click(function(e){
			e.preventDefault();
			var meeting = $(this).parents('li.meeting').data('meeting');
			createMeetingPage(meeting);
		});
		item.data('meeting', meeting);
		list.append(item);
	}
	container.trigger( "create" );
}

function createMeetingPage(meeting) {
	$.mobile.changePage("#meeting-details");

	$('#meeting-details .ui-header h1').text( meeting.description + ' at ' + formatMeetingTime(meeting) );

	var container = $('#meeting-details .ui-content');
	container.empty().append(meetingPageTemplate(meeting));

	var actions = container.find('.actions');

	if(meeting.status != 'cancelled') {
		actions.append('<a class="cancel" data-role="button">Cancel Appointment</a>');
		$(document).delegate('#meeting-details .actions a.cancel', 'click', function() {
		  $(this).simpledialog({
		    'mode' : 'bool',
		    'prompt' : 'Are you sure you wish to cancel?',
		    'useModal': true,
		    'buttons' : {
				'Yes': {
					click: function () {
						cancelMeeting($('#meeting-details').data('meeting'));
					}
				},
				'Cancel': {
					click: function () {},
					icon: "delete",
					theme: "c"
				}
		    }
		  })
		});
	}

	$('#meeting-details').data('meeting', meeting);
	container.trigger( "create" );
}

function cancelMeeting(meeting) {
	BOSSAPI.scheduling.meetings.cancel({
		data : { id : meeting.id },
		success : function() {
			window.history.back();
			refreshMySchedule();
		},
		error : function() {
			alert('This reservation cannot be cancelled.  Please see your Department Head if you need additional assistance.');
		}
	});
}

function createBook(container, clients) {
	container.empty();

	var list = $('<ul data-role="listview" data-filter="true" data-inset="true"></ul>');
	for(var i = 0 ; i < clients.length ; i++) {
		var listItem = $(clientListItemTemplate(clients[i].client));
		listItem.data('client', clients[i].client);
		list.append(listItem);
	}
	container.append(list);
	container.trigger('create');
}

function showClient(client) {
	$.mobile.changePage("#client-details");

	var container = $('#client-details');

	var contents = container.find('.ui-content');
	contents.empty().text('Loading...');

	BOSSAPI.auth.info({
		data : {
			member_id : client.member_id,
		},
		success : function(member) {
			container.find('h1').empty().text(BOSSAPI.utils.formatString('{last}, {first}', member.name));
			contents.empty().append(clientDetailTemplate(member));
			container.trigger('create');

			var params = {
				ssoid : BOSSAPI._ssoid,
				employee_number : employee().id,
				publish : 'true,false', //Both published and non-published schedules.
				member_id : client.member_id
			};

			container.find('div.rosters').empty().append('Loading...');
			BOSSAPI.scheduling.meetings.search(params, function(meetings){
				container.find('div.rosters').empty();
				for(var i = 0 ; i < meetings.length ; i++) {
					container.find('div.rosters').append(clientDetailHistoryItemTemplate(meetings[i]));
				}
				container.find('div.rosters').trigger('create');
			});
		},
		error : function() {
			alert('Failed to lookup member information.');
		}
	});	
}
</script>
</html>